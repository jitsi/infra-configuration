---
- name: Main
  hosts: all
  gather_facts: true
  become_user: root
  become: true
  vars_files:
    - secrets/ssh-users.yml
    - secrets/wavefront.yml
    - secrets/consul.yml
    - secrets/repo.yml
    - secrets/nomad.yml
    - secrets/oci-logging.yml
    - secrets/carbon-black.yml
    - config/vars.yml
    - sites/{{ hcv_environment }}/vars.yml
  vars:
    nomad_node_role: both
    nomad_node_class: "consul"
    nomad_telemetry: true
    nomad_telemetry_prometheus_metrics: true
    shard_role: consul
    cloud_provider: oracle
    nomad_pool_type: consul
    nomad_meta:
      environment: "{{ hcv_environment }}"
      cloud_name: "{{ cloud_name }}"
      cloud_region: "{{ oracle_region }}"
      pool_type: "consul"
      availability_domain: "{{ cloud_availability_domain }}"
      fault_domain: "{{ cloud_fault_domain }}"

  pre_tasks:
    - name: Setup new repo template file
      ansible.builtin.template:
        dest: "/etc/apt/auth.conf.d/jitsi-repo.conf"
        src: "roles/jitsi-repo/templates/jitsi-repo.conf.j2"
        owner: root
        mode: 0600
      tags: setup
    - name: Set nomad node role to both
      ansible.builtin.set_fact:
        nomad_node_role: both
      tags: setup
    - name: List block volume mounts
      ansible.builtin.shell: |
        ls /mnt/bv
      register: block_volume_mounts
      tags: setup
      ignore_errors: true

    - name: Set nomad block volume facts
      set_fact:
        nomad_block_volume_mounts: "{{ block_volume_mounts.stdout.split(' ') }}"
      tags: setup
      when: block_volume_mounts.stdout
    - name: Set nomad host volumes extras for consul
      set_fact:
        nomad_host_volumes_extra_for_consul: |-
          [
            {% for bv in nomad_block_volume_mounts %}
              {
                name: "{{ bv }}",
                path: "/mnt/bv/{{ bv }}",
                create: false,
                read_only: false
              },
            {% endfor %}
          ]
      when: nomad_block_volume_mounts is defined

    - name: Set nomad host volumes extras for consul
      set_fact:
        nomad_host_volumes_extra: "{{ nomad_host_volumes_extra_for_consul | from_yaml }}"
      when: nomad_block_volume_mounts is defined

    - name: Stop telegraf for nomad clients # noqa ignore-errors
      ansible.builtin.service:
        name: telegraf
        state: stopped
        enabled: false
      ignore_errors: true

    # - name: Remove nomad client configuration
    #   ansible.builtin.file:
    #     path: /etc/nomad.d/client.hcl
    #     state: absent
    #   tags: setup
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 86400
    - name: Get instance's details
      ansible.builtin.uri:
        url: http://169.254.169.254/opc/v1/instance/
      register: instance_result
      tags: setup
    - name: Set nomad instance variables
      ansible.builtin.set_fact:
        nomad_shape: "{{ instance_result.json.shape }}"
        cloud_availability_domain: "{{ instance_result.json.ociAdName }}"
        cloud_fault_domain: "{{ instance_result.json.faultDomain }}"
      tags: setup
    - name: Calculate nomad cpu_total_compute
      ansible.builtin.shell: |
        set -o pipefail
        echo $(( $(dmidecode -t 4 | grep 'Current Speed:' | awk '{print $3}') * $(cat /proc/cpuinfo | grep 'processor' | wc -l) ))
      args:
        executable: /bin/bash
      register: cpu_total_compute_result
      tags: setup
      when: nomad_shape == "VM.Standard.A1.Flex"
    - name: Set nomad cpu_total_compute fact
      ansible.builtin.set_fact:
        nomad_cpu_total_compute: "{{ cpu_total_compute_result.stdout }}"
      tags: setup
      when: nomad_shape == "VM.Standard.A1.Flex"
  roles:
    - { role: "iptables-consul", tags: "iptables"}
    - { role: "iptables-nomad", tags: "iptables-nomad"}
    - { role: "logrotate", tags: "logrotate"}
    - { role: "journald", tags: "journald"}
    - { role: "common", tags: "common"}
    - { role: "rsyslog", tags: "rsyslog"}
    - { role: "sshusers", tags: "ssh" }
    - { role: "unattended-upgrades", tags: "unattended-upgrades"}
    - { role: "consul-server", tags: "consul-server"}
    - { role: "nomad-jitsi", tags: "nomad-jitsi" }
    - { role: "nomad", tags: "nomad" }
    - { role: "consul-service-start", tags: "consul-service-start"}
    # telegraf now run in nomad system service mode
    # - role: "wavefront"
    #   tags: "telegraf"
    #   wavefront_proxy_address: "{{ regional_wavefront_proxy }}"
    #   wavefront_configure_collector: true
    #   wavefront_install_collector: false
    #   datadog_extensions: "true"
    #   when: telegraf_enabled
    #   vars:
    #     telegraf_inputs:
    #       procstat:
    #         - systemd_unit: "consul.service"
    #           cmdline_tag: false
    #           pid_tag: false
    #     telegraf_tags:
    #       shard-role: "consul"
    #       role: "consul"
    #       environment: "{{ hcv_environment }}"
    #       region: "{{ cloud_region }}"
    #       cloud_provider: "{{ cloud_provider }}"
    - { role: "fluentd-jitsi", tags: "fluentd", fluentd_jitsi_install_flag: false, fluentd_jitsi_configure_flag: true, when: consul_enable_fluentd }
    - { role: "carbon-black", tags: "carbon-black", when: production_env_flag}
  tasks:
    - name: Start nomad
      ansible.builtin.service:
        name: nomad
        state: started
        enabled: true
