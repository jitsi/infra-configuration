---
- name: Main
  hosts: default
  gather_facts: true
  become: true
  become_user: root
  vars:
    cloud_provider: oracle
  vars_files:
    - secrets/ssh-users.yml
    - secrets/jibri.yml
    - secrets/repo.yml
    - secrets/prosody-egress-aws.yml
    - config/vars.yml
  pre_tasks:
    # pause 10 seconds before updating, to ensure that everything is ready to roll
    - name: Pause for 10
      ansible.builtin.pause:
        seconds: 10
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true

  post_tasks:
    - name: Disable prosody startup on boot
      ansible.builtin.systemd:
        name: prosody
        state: stopped
        enabled: false

    - name: Stop service signal-sidecar
      ansible.builtin.service:
        name: signal-sidecar
        state: stopped
        enabled: false

    - name: Register installed Jicofo version
      ansible.builtin.shell: |
        set -o pipefail
        dpkg -s jicofo | grep Version | awk '{print $2}' | cut -d'-' -f2
      register: jicofo_version_shell
      args:
        executable: /bin/bash
      changed_when: jicofo_version_shell.rc != 0

    - name: Register installed Meet version
      ansible.builtin.shell: |
        set -o pipefail
        dpkg -s jitsi-meet-web | grep Version | awk '{print $2}' | cut -d'.' -f3 | cut -d'-' -f1
      register: jitsi_meet_version_shell
      args:
        executable: /bin/bash
      changed_when: jitsi_meet_version_shell.rc != 0

  roles:
    - { role: "common", tags: "common" }
    - { role: "sshusers", tags: "ssh" }
    - { role: "ntp", tags: "ntp"}
    - { role: "logrotate", tags: "logrotate", logrotate_rules_core_enabled: true }
    - { role: "journald", tags: "journald"}
    - { role: "rsyslog", tags: "rsyslog"}
    - { role: "consul-install", tags: "consul-install"}
    - { role: "prosody", tags: "prosody", prosody_install_flag: true, prosody_configure_flag: false }
    - { role: "jitsi-meet-prosody", tags: "jitsi-meet-prosody" }
    - { role: "jicofo", tags: "jicofo", jicofo_install_flag: true, jicofo_configure_flag: false }
    - { role: "jicofo-rtcstats-push", tags: "jicofo-rtcstats-push", jicofo_rtcstats_push_install_flag: true, jicofo_rtcstats_push_configure_flag: false }
    - { role: "jitsi-meet", tags: "jitsi-meet", jitsi_meet_install_flag: true, jitsi_meet_configure_flag: false}
    - { role: "signal-sidecar", tags: "signal-sidecar", signal_sidecar_install_flag: true, signal_sidecar_configure_flag: false }
    - { role: "jitsi-dumper", tags: "jitsi-dumper"}
    - role: "wavefront"
      tags: "telegraf"
      wavefront_install_collector: true
      datadog_extensions: "true"
      vars:
        telegraf_tags:
          role: "core"
          cloud: "{{ cloud_provider }}"
    - { role: "testrtc", tags: "testrtc", testrtc_install_flag: true }
    - { role: "prosody-egress", tags: "prosody-egress", prosody_egress_install_flag: true, prosody_egress_configure_flag: false }
    - { role: "clean-system", tags: "clean-system, build" }
