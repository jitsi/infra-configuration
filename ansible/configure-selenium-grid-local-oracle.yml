---
- name: Main
  hosts: all
  gather_facts: true
  become_user: root
  become: true
  vars:
    cloud_provider: oracle
    shard_role: selenium-grid
    # increase buffer size
    udp_buffer_max_backlog: 100000
    udp_buffer_size: 104857600
    nomad_node_role: client
    nomad_node_class: "selenium-grid"
    nomad_meta:
      environment: "{{ hcv_environment }}"
      cloud_name: "{{ cloud_name }}"
      cloud_region: "{{ oracle_region }}"
      pool_type: "selenium-grid"
      selenium_grid_name: "{{ selenium_grid_name }}"
      availability_domain: "{{ cloud_availability_domain }}"
      fault_domain: "{{ cloud_fault_domain }}"

  vars_files:
    - secrets/selenium.yml
    - secrets/consul.yml
    - secrets/ssh-users.yml
    - secrets/repo.yml
    - secrets/nomad.yml
    - secrets/github.yml
    - secrets/oci-logging.yml
    - config/vars.yml
    - sites/{{ hcv_environment }}/vars.yml
  pre_tasks:
    - name: Remove Ansible repository
      ansible.builtin.apt_repository:
        repo: "ppa:ansible/ansible"
        state: absent
        update_cache: false
    - name: Remove OpenJDK repository
      ansible.builtin.apt_repository:
        repo: "ppa:openjdk-r/ppa"
        state: absent
        update_cache: false
    - name: Remove rsyslog apt repo
      ansible.builtin.apt_repository:
        repo: "ppa:adiscon/v8-stable"
        state: absent
        update_cache: false
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
      tags: setup
    - name: Set hostname
      ansible.builtin.hostname:
        name: "{{ ansible_fqdn }}"
      tags: setup
    - name: UDP buffer size maximum
      ansible.posix.sysctl:
        name: net.core.rmem_max
        value: "{{ udp_buffer_size }}"
        sysctl_set: true
        state: present
        reload: true
      when: selenium_grid_role == 'node'
    - name: UDP buffer size count
      ansible.posix.sysctl:
        name: net.core.netdev_max_backlog
        value: "{{ udp_buffer_max_backlog }}"
        sysctl_set: true
        state: present
        reload: true
      when: selenium_grid_role == 'node'
    - name: Get instance's details
      ansible.builtin.uri:
        url: http://169.254.169.254/opc/v1/instance/
      register: instance_result
      tags: setup
    - name: Set nomad instance variables
      ansible.builtin.set_fact:
        nomad_shape: "{{ instance_result.json.shape }}"
        cloud_availability_domain: "{{ instance_result.json.ociAdName }}"
        cloud_fault_domain: "{{ instance_result.json.faultDomain }}"
      tags: setup
  roles:
    - { role: "sshusers", tags: "ssh" }
    - { role: "iptables-serf", tags: "iptables-serf", when: selenium_grid_enable_nomad == "true" }
    - { role: "iptables-nomad", tags: "iptables-nomad", when: selenium_grid_enable_nomad == "true" }
    - { role: "iptables-selenium-grid", tags: "iptables"}
    - { role: "unattended-upgrades", tags: "unattended-upgrades"}
    - { role: "ntp", tags: "ntp"}
    - { role: "logrotate", tags: "logrotate"}
    - { role: "journald", tags: "journald"}
    - { role: "rsyslog", rsyslog_install_flag: false, tags: "rsyslog"}
    - { role: "fluentd-jitsi", tags: "fluentd", fluentd_jitsi_install_flag: false, fluentd_jitsi_configure_flag: true, when: selenium_grid_enable_fluentd }
    - role: "wavefront"
      tags: "telegraf"
      when: not selenium_grid_enable_nomad == "true"
      wavefront_proxy_address: "{{ regional_wavefront_proxy }}"
      wavefront_configure_collector: true
      wavefront_install_collector: true
      datadog_extensions: "true"
      vars:
        telegraf_tags:
          role: "grid"
          grid_role: "{{ selenium_grid_role }}"
          grid: "{{ selenium_grid_name }}"
          environment: "{{ hcv_environment }}"
          oracle_region: "{{ oracle_region }}"
          cloud: "oracle"
    - { role: "consul-agent", tags: "consul", consul_install_flag: false, when: selenium_grid_enable_nomad == "true"}
    - { role: "docker-daemon-config", tags: "docker-daemon-config", when: selenium_grid_enable_nomad == "true" }
    - { role: "nomad-jitsi", tags: "nomad-jitsi", when: selenium_grid_enable_nomad == "true" }
    - { role: "nomad", tags: "nomad", when: selenium_grid_enable_nomad == "true" }

    # configure and start selenium grid components
    - { role: "selenium-grid", tags: "selenium-grid", selenium_grid_install_flag: false, selenium_grid_extras_install_flag: false,
        when: selenium_grid_enable_nomad != "true"}
    - { role: "consul-selenium-grid-hub", tags: "consul", when: selenium_grid_role == 'hub' and selenium_grid_enable_nomad != "true"}
  tasks:
    - name: Disable native telegraf in nomad case
      ansible.builtin.systemd:
        name: telegraf
        state: stopped
        enabled: false
      when: selenium_grid_enable_nomad == "true"
    - name: Consul service enablement
      ansible.builtin.systemd:
        name: consul
        state: started
        enabled: true
      when: selenium_grid_enable_nomad == "true"
    - name: Start nomad
      ansible.builtin.service:
        name: nomad
        state: started
        enabled: true
      when: selenium_grid_enable_nomad == "true"
