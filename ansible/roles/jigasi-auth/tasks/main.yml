---
- name: Add legacy jigasi XMPP control authentication
  ansible.builtin.command: prosodyctl register {{ jigasi_auth_user }} {{ jigasi_auth_domain }} {{ jigasi_auth_password }}
  args:
    creates: "{{ jigasi_auth_domain_path }}"
  when: jigasi_legacy_auth and jigasi_auth_password != 'replaceme'

- name: Add legacy jigasi transcriber authentication
  ansible.builtin.command: prosodyctl register {{ jigasi_transcriber_auth_user }} {{ jigasi_transcriber_auth_domain }} {{ jigasi_transcriber_auth_password }}
  args:
    creates: "{{ jigasi_transcriber_auth_domain_path }}"
  when: jigasi_legacy_auth and jigasi_transcriber_auth_password != 'replaceme'

- name: Add jigasi account A for XMPP brewery
  ansible.builtin.command: prosodyctl adduser "{{ jigasi_brewery_username_A }}@{{ jigasi_brewery_domain }}"
  args:
    stdin: "{{ secrets_jigasi_brewery_A }}\n{{ secrets_jigasi_brewery_A }}"
    creates: "{{ jigasi_brewery_path_A }}"
  when: secrets_jigasi_brewery_A is defined and secrets_jigasi_brewery_A and secrets_jigasi_brewery_A != ""

- name: Add jigasi account B for XMPP brewery
  ansible.builtin.command: prosodyctl adduser "{{ jigasi_brewery_username_B }}@{{ jigasi_brewery_domain }}"
  args:
    stdin: "{{ secrets_jigasi_brewery_B }}\n{{ secrets_jigasi_brewery_B }}"
    creates: "{{ jigasi_brewery_path_B }}"
  when: secrets_jigasi_brewery_B is defined and secrets_jigasi_brewery_B and secrets_jigasi_brewery_B != ""
