---
- name: Assures "/etc/nginx/ssl" dir exists
  ansible.builtin.file:
    mode: 0755
    path: "{{ jenkins_ssl_dest_dir }}"
    state: directory

- name: Nginx | Generate dhparam # noqa ignore-errors
  ansible.builtin.command: "openssl dhparam -dsaparam -out {{ jenkins_ssl_dest_dir }}/dhparam.pem 2048"
  ignore_errors: true
  args:
    creates: "{{ jenkins_ssl_dest_dir }}/dhparam.pem"
  notify: Restart nginx for jenkins

- name: Install SSL certificate
  ansible.builtin.copy:
    mode: 0644
    content: "{{ jenkins_ssl_certificate }}"
    dest: "{{ jenkins_ssl_dest_dir }}/{{ jenkins_sitename }}.crt"
  notify: Restart nginx for jenkins

- name: Install SSL private key
  ansible.builtin.copy:
    content: "{{ jenkins_ssl_key_name }}"
    dest: "{{ jenkins_ssl_dest_dir }}/{{ jenkins_sitename }}.key"
    mode: 0600
  notify: Restart nginx for jenkins

- name: Configure nginx virtualhost for jenkins
  ansible.builtin.template:
    mode: 0644
    src: nginx.conf.j2
    dest: "/etc/nginx/sites-available/{{ jenkins_sitename }}"
  notify: Restart nginx for jenkins


- name: Enable jenkins site
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ jenkins_sitename }}"
    dest: "/etc/nginx/sites-enabled/{{ jenkins_sitename }}"
    state: link
  notify: Restart nginx for jenkins

- name: Systemd jenkins service
  ansible.builtin.copy:
    mode: 0644
    src: jenkins.service
    dest: /etc/systemd/system/docker-jenkins.service

- name: Start jenkins service
  ansible.builtin.systemd:
    state: started
    daemon_reload: true
    name: docker-jenkins
