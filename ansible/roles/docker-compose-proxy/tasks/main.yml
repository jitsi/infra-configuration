---
# first ssl Certificates
- name: Assures "/etc/nginx/ssl" dir exists
  ansible.builtin.file:
    mode: 0755
    path: "{{ docker_compose_proxy_ssl_dest_dir }}"
    state: directory

- name: Nginx | Generate dhparam # noqa ignore-errors
  ansible.builtin.command: "openssl dhparam -dsaparam -out {{ docker_compose_proxy_ssl_dest_dir }}/dhparam.pem 2048"
  ignore_errors: true
  args:
    creates: "{{ docker_compose_proxy_ssl_dest_dir }}/dhparam.pem"
  notify: Restart nginx for docker-compose-proxy

- name: Install SSL certificate
  ansible.builtin.copy:
    mode: 0644
    content: "{{ jitsi_meet_ssl_certificate }}"
    dest: "{{ docker_compose_proxy_ssl_dest_dir }}/{{ environment_domain_name }}.crt"
  notify: Restart nginx for docker-compose-proxy

- name: Install SSL private key
  ansible.builtin.copy:
    content: "{{ jitsi_meet_ssl_key_name }}"
    dest: "{{ docker_compose_proxy_ssl_dest_dir }}/{{ environment_domain_name }}.key"
    mode: 0600
  notify: Restart nginx for docker-compose-proxy

- name: Configure nginx virtualhost for docker-compose
  ansible.builtin.template:
    mode: 0644
    src: nginx.conf.j2
    dest: "/etc/nginx/sites-available/{{ environment_domain_name }}"
  notify: Restart nginx for docker-compose-proxy

- name: Enable compose nginx site
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ environment_domain_name }}"
    dest: "/etc/nginx/sites-enabled/{{ environment_domain_name }}"
    state: link
  notify: Restart nginx for docker-compose-proxy

# then nginx config
