---
datadog_extensions: "false"
statsd_port: 8125
telegraf_jicofo_filter: "jitsi_jicofo_*"
telegraf_jvb_filter: [
    "jitsi_jvb_active_endpoints",
    "jitsi_jvb_average_rtt",
    "jitsi_jvb_colibri_web_socket_*",
    "jitsi_jvb_conference_seconds_total",
    "jitsi_jvb_conferences",
    "jitsi_jvb_conferences_by_size*",
    "jitsi_jvb_conferences_inactive",
    "jitsi_jvb_conferences_p2p",
    "jitsi_jvb_conferences_with_relay",
    "jitsi_jvb_current_endpoints",
    "jitsi_jvb_current_visitors",
    "jitsi_jvb_data_channel_messages_received_total",
    "jitsi_jvb_data_channel_messages_sent_total",
    "jitsi_jvb_dominant_speaker_changes_total",
    "jitsi_jvb_endpoints_disconnected_total",
    "jitsi_jvb_endpoints_dtls_failed_total",
    "jitsi_jvb_endpoints_inactive",
    "jitsi_jvb_endpoints_no_message_transport_after_delay_total",
    "jitsi_jvb_endpoints_oversending",
    "jitsi_jvb_endpoints_reconnected_total",
    "jitsi_jvb_endpoints_recvonly",
    "jitsi_jvb_endpoints_relayed",
    "jitsi_jvb_endpoints_sending_audio",
    "jitsi_jvb_endpoints_sending_video",
    "jitsi_jvb_endpoints_with_high_outgoing_loss",
    "jitsi_jvb_endpoints_with_spurious_remb",
    "jitsi_jvb_endpoints_with_suspended_sources",
    "jitsi_jvb_graceful_shutdown",
    "jitsi_jvb_healthy",
    "jitsi_jvb_ice_failed_total",
    "jitsi_jvb_ice_succeeded_*",
    "jitsi_jvb_incoming_bitrate",
    "jitsi_jvb_incoming_loss_fraction",
    "jitsi_jvb_incoming_packet_rate",
    "jitsi_jvb_jvm_*",
    "jitsi_jvb_keyframes_received_total",
    "jitsi_jvb_largest_conference",
    "jitsi_jvb_layering_changes_received_total",
    "jitsi_jvb_local_endpoints",
    "jitsi_jvb_loss_fraction",
    "jitsi_jvb_muc_clients_configured",
    "jitsi_jvb_muc_clients_connected",
    "jitsi_jvb_mucs_connected",
    "jitsi_jvb_mucs_joined",
    "jitsi_jvb_outgoing_bitrate",
    "jitsi_jvb_outgoing_loss_fraction",
    "jitsi_jvb_outgoing_packet_rate",
    "jitsi_jvb_queue_*",
    "jitsi_jvb_relay_incoming_bitrate",
    "jitsi_jvb_relay_incoming_packet_rate",
    "jitsi_jvb_relay_outgoing_bitrate",
    "jitsi_jvb_relay_outgoing_packet_rate",
    "jitsi_jvb_relays_no_message_transport_after_delay_total",
    "jitsi_jvb_rtcp_transit_time",
    "jitsi_jvb_rtp_transit_time",
    "jitsi_jvb_startup_time",
    "jitsi_jvb_stress",
    "jitsi_jvb_thread_count",
    "jitsi_jvb_video_milliseconds_received_total"
]
telegraf_additional_config_dir: "{{ telegraf_config_dir }}/telegraf.d"
# telegraf variables
# telegraf_config_wfcopy: "https://raw.githubusercontent.com/wavefrontHQ/integrations/master/telegraf/telegraf.conf"
telegraf_config_dir: "/etc/telegraf"
telegraf_hostname: "{{ ansible_fqdn }}"
telegraf_http_port: 3878
telegraf_main_config: "{{ telegraf_config_dir }}/telegraf.conf"
telegraf_port: 2878
telegraf_wavefront_output_plugin_config: "{{ telegraf_additional_config_dir }}/10-wavefront.conf"
telegraf_prometheus_output_plugin_config: "{{ telegraf_additional_config_dir }}/20-prometheus.conf"
wavefront_agent_config_args:
wavefront_agent_extra_args:
wavefront_api_token: 'DUMMY_WF_URL_API_TOKEN'
wavefront_api_url: "{{ wavefront_url }}/api"
wavefront_cmd: wave
wavefront_collector: 'telegraf'
# by default use the latest telegraf as influx repo updates on stable release and doesn't keep old versions
wavefront_collector_version: '*'
wavefront_config: "{{ wavefront_config_dir }}/wavefront.conf"
wavefront_config_dir: '/etc/wavefront/{{ wavefront_proxy_pkg }}'
wavefront_configure_collector: false
wavefront_create_cred_file: false
wavefront_cred_file: "{{ lookup('env', 'HOME') }}/.wavefront/credentials"
wavefront_install_collector: false
wavefront_install_proxy: false
# defaults file for wavefront
wavefront_instance: "metrics"
# Other pip package related attributes
wavefront_pip_pkg: wavefront-cli
wavefront_pkg_state: 'present'
wavefront_proxy_address: "{{ regional_wavefront_proxy | default('localhost') }}"
wavefront_proxy_from_apt: true
wavefront_proxy_json_port: "{{ telegraf_port }}"
# to set a version of the agent use wavefront-proxy=X.Y.Z
wavefront_proxy_pkg: 'wavefront-proxy'
wavefront_proxy_pkg_url: 'https://packagecloud.io/wavefront/proxy'
wavefront_proxy_port: "{{ telegraf_port }}"
wavefront_proxy_version: "{{ '12.0-2' if (ansible_distribution_major_version | int) >= 22 else '10.14-1' }}"
wavefront_repo_base_url: "https://packagecloud.io/install/repositories/wavefront/{{ item.tool }}"
wavefront_repo_gpgkey: "https://packagecloud.io/wavefront/proxy/gpgkey"
wavefront_repo_install_url: "{{ wavefront_repo_base_url }}/config_file.repo?os={{ item.release }}&dist={{ item.version }}&source=script"
wavefront_tcp_mode: false
wavefront_architecture: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'amd64' }}"
wavefront_telegraf_deb_file: "telegraf_1.22.4-1_{{ wavefront_architecture }}.deb"
wavefront_telegraf_deb_path: "/tmp/{{ wavefront_telegraf_deb_file }}"
wavefront_telegraf_deb_url: "https://{{ jitsi_repo_username }}:{{ jitsi_repo_password }}@{{ jitsi_repo_host }}/debian/misc/{{ wavefront_telegraf_deb_file }}"
wavefront_telegraf_from_apt: false
wavefront_telegraf_pkg_url: "{{ wavefront_telegraf_pkg_url_influx if wavefront_telegraf_use_influx else wavefront_telegraf_pkg_url_pcloud }}"
wavefront_telegraf_pkg_url_influx: 'https://repos.influxdata.com'
wavefront_telegraf_pkg_url_pcloud: 'https://packagecloud.io/wavefront/telegraf'
wavefront_telegraf_remove_repo: true
wavefront_telegraf_repo_branch: "{{ 'stable' if wavefront_telegraf_use_influx else 'main' }}"
wavefront_telegraf_repo_gpgkey: "{{ wavefront_telegraf_repo_gpgkey_influx if wavefront_telegraf_use_influx else wavefront_telegraf_repo_gpgkey_pcloud }}"
wavefront_telegraf_repo_gpgkey_2: "{{ wavefront_telegraf_repo_gpgkey_influx_2 if wavefront_telegraf_use_influx else false }}"
# needs to be updated when apt keys change
wavefront_telegraf_repo_gpgkey_id: D8FF8E1F7DF8B07E
wavefront_telegraf_repo_gpgkey_id_2: 684A14CF2582E0C5
wavefront_telegraf_repo_gpgkey_influx: "https://repos.influxdata.com/influxdata-archive_compat.key"
wavefront_telegraf_repo_gpgkey_influx_2: "https://repos.influxdata.com/influxdb2.key"
wavefront_telegraf_repo_gpgkey_pcloud: "https://packagecloud.io/wavefront/telegraf/gpgkey"
wavefront_telegraf_use_influx: true
wavefront_url: "https://{{ wavefront_instance }}.wavefront.com"
