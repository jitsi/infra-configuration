---
- name: Install jicofo prereq list of packages
  ansible.builtin.apt:
    name: jq
    state: present

- name: Mark unhold on jicofo package version # noqa no-changed-when
  ansible.builtin.command: apt-mark unhold {{ jicofo_deb_pkg_name }}

- name: Update jicofo
  ansible.builtin.apt:
    name: "{{ jicofo_deb_pkg_name }}={{ jicofo_deb_pkg_version }}"
    state: present
  notify:
    - Restart jicofo

- name: Mark hold on jicofo package version # noqa no-changed-when
  ansible.builtin.command: apt-mark hold {{ jicofo_deb_pkg_name }}

# changes TasksMax in systemd unit file for jicofo
- name: Systemd jicofo service overrides directory
  ansible.builtin.file:
    mode: 0755
    path: /etc/systemd/system/jicofo.service.d
    state: directory

- name: Systemd jicofo service overrides
  ansible.builtin.copy:
  args:
    dest: /etc/systemd/system/jicofo.service.d/50-maxtasks.conf
    mode: 0644
    owner: root
    content: |
      [Service]
      TasksMax=9830

# script to run ansible updates
- name: Install jicofo post-install script upload
  ansible.builtin.copy:
    dest: "/usr/local/bin/postinstall-jicofo.sh"
    src: "postinstall-jicofo.sh"
    mode: 0755
    owner: root

# script to run ansible updates
- name: Install jicofo local configure script upload
  ansible.builtin.copy:
    dest: "/usr/local/bin/configure-jicofo-local.sh"
    src: "configure-jicofo-local.sh"
    mode: 0755
    owner: root

- name: Disable jicofo service on install
  ansible.builtin.service:
    name: jicofo
    state: stopped
    enabled: false
  when: jicofo_install_flag and not jicofo_configure_flag
  register: jicofoservice

- name: Install monitoring pip prereqs - decorator
  ansible.builtin.pip:
    name: decorator
    state: present
  when: (ansible_distribution_major_version | int) >= 20

- name: Freeze stats script pre reqs
  ansible.builtin.pip:
    name: datadog
    state: present
  when: (ansible_distribution_major_version | int) >= 20

# add a stats script to wrap the dd->colibri script
- name: Jicofo stats script upload
  ansible.builtin.template:
    dest: "{{ jicofo_stats_script_path }}"
    src: "jicofo-stats.sh.j2"
    mode: 0755
    owner: root

# add a stats script to upload colibri stats to DataDog
- name: Jicofo stats python script upload
  ansible.builtin.copy:
    dest: "{{ jicofo_stats_python_script_path }}"
    src: "jicofo-stats.py"
    mode: 0755
    owner: root

- name: Jicofo health script upload
  ansible.builtin.copy:
    src: jicofo-health.sh
    dest: "{{ jicofo_health_script_path }}"
    mode: 0755
    owner: root
