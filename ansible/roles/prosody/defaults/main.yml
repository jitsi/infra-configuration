---
# give a default shard name in case none is provided
hcv_environment: all
jitsi_meet_api_server_name: "signal-api-{{ prosody_domain_name }}"
jitsi_meet_no_sharding: false
# This check by default is false, but on configure time we check the installed version of jitsi-meet, whether the module
# exist and if it is there we enable it in the client prosody config template
mod_external_services_exists: false
moderator_auth_domain_path: "/var/lib/prosody/{{ prosody_auth_domain_name | regex_replace('\\.', '%2e') }}/accounts/{{ moderator_auth_user }}.dat"
moderator_auth_password: "replaceme"
moderator_auth_user: "moderator"
prosody_admins: "{{ prosody_focus_admins | list }}"
prosody_amplitude_api_key: false
prosody_apt_base_name: prosody
prosody_asap_accepted_audiences:
  - jitsi
  - spot
  - SPOT
prosody_asap_accepted_issuers:
  - jitsi
  - chat
  - callresponse
  - spot
  - PROD-SPOT
  - vmms
prosody_asap_audience: jitsi
prosody_asap_issuer: jitsi
prosody_asap_key_path: /etc/prosody/certs/asap.key
prosody_auth_domain_name: "auth.{{ prosody_domain_name }}"
prosody_bosh_max_inactivity: 60
# assume shard has local prosody-jvb, otherwise use prosody-brewery shared service
prosody_brewery_shard_enabled: true
prosody_breakout_rooms_enabled: true
prosody_c2s_stanza_size_limit: '512*1024'
prosody_cache_keys_url: false
# enable a jigasi component in prosody
prosody_cancel_api: "https://hc-video-events.staging.public.atl-paas.net/v1/call/cancel"
prosody_cloud_provider: "{{ cloud_provider | default('oracle') }}"
prosody_conference_info_url: false
prosody_configure_flag: true
prosody_create_users: "{{ prosody_enable_plain_auth }}"
prosody_disable_messaging: false
prosody_disabled_modules: ["pubsub", "register"]
prosody_disable_required_room_claim: false
prosody_domain_name: domain.local
# version vars for url install method
prosody_dpkg_base_name: prosody
prosody_dpkg_path: "/tmp/{{ prosody_package_filename }}"
# Custom prosody version with some performance fixes
# https://packages.prosody.im/debian/pool/main/p/prosody-0.11/prosody-0.11_1nightly112-1~bionic_amd64.deb
prosody_dpkg_url: "https://packages.prosody.im/debian/pool/main/p/{{ prosody_package_name }}/{{ prosody_package_filename }}"
prosody_egress_url: http://127.0.0.1:8062/v1/events
prosody_egress_fallback_url: https://api-vo-pilot.jitsi.net/vpaas-event-acceptor/v1/forward
# flag to control whether to trigger call flow events
prosody_enable_call_flow: false
# Use mod_client_proxy instead of external component for "focus.".
# Has to be in sync with the jicofo version: "false" for <= 700, "true" for > 700 (or based on the "Remove FocusComponent" commit for hotfixes.)
prosody_enable_client_proxy: true
prosody_enable_debug_log: false
prosody_enable_filter_iq_jibri: false
# plugin to control outbound dialing
prosody_enable_filter_iq_rayo: false
prosody_enable_firewall: "{{ true if prosody_disable_messaging else prosody_enable_jvb_muc_presence_filter }}"
# don't enable guest authentication by default
prosody_enable_guest_auth: false
prosody_enable_health_check_cron: true
# flag to control the internal.auth{{ prosody_domain_name }} muc for jibri, jigasi and eventually JVB
prosody_enable_internal_muc: true
# enables jiconop2 module, optimizing connection join number of stanzas
prosody_enable_jiconop_module: true
prosody_enable_jvb_muc_presence_filter: true
prosody_enable_lobby: false
prosody_enable_log_filter: false
# plugin to write logs on slow event processing
prosody_enable_log_slow_events: false
prosody_enable_mod_turncredentials: false
# Send "conference_ended" events with duration and message count. Requires amplitude_api_key to be set, inactive without it.
prosody_enable_mod_measure_message_count: false
prosody_enable_muc_census: true
prosody_enable_muc_domain_mapper: false
# call flow configuration
prosody_enable_muc_events: false
prosody_enable_muc_password_whitelist: true
prosody_enable_muc_rate_limit: true
prosody_enable_muc_size: false
prosody_enable_password_preset: false
prosody_enable_password_waiting_for_host: false
prosody_enable_persistent_lobby: false
prosody_enable_end_meeting: false
# don't enable authentication by default
prosody_enable_plain_auth: false
# flag to control whether to publish presence based on incoming user identity discovered from JWT
prosody_enable_presence_identity: false
prosody_enable_rate_limit: true
prosody_enable_token_room_verification: true
# don't enable tokens by default for now
prosody_enable_tokens: true
# plugin to check features when requesting a transcription
prosody_enable_transcription_filter: false
prosody_enable_wait_for_host: false
# prosody_log_level: change 'info' to 'debug' for debug logs
prosody_focus_admins:
  - "focus@{{ prosody_auth_domain_name }}"
prosody_focus_secret: "{{ secrets_jicofo_focus | default(false) }}"
prosody_focus_jvb_secret: "{{ secrets_jicofo_focus_jvb | default(false) }}"
prosody_focus_visitor_secret: "{{ secrets_jicofo_focus_visitor | default(false) }}"

prosody_gc_mode: "generational"
prosody_gc_inc_threshold: 105
prosody_gc_inc_speed: 500
prosody_gc_inc_step_size: 13
prosody_gc_gen_min_threshold: 40
prosody_gc_gen_major_threshold: 200

prosody_guest_domain_name: "guest.{{ prosody_domain_name }}"
prosody_hide_all_rooms: true
prosody_install_flag: true
# PRIMARY FLAG CONTROLS apt install vs. URL, switch this to move between apt and URL
# certain flags are only useful when one or the other is enabled, they are ordered here by relevance
# when prosody_install_from_apt is true we use latest prosody from apt matching prosody_version
# for instance, prosody_version is only used for apt, whereas prosody_package_version is to specify a by-file version
# set this to false to install via URL, or true to install via apt
prosody_install_from_apt: true
prosody_invite_api: "https://hc-video-events.staging.public.atl-paas.net/v1/call/invite"
prosody_jaas_actuator_url: false
prosody_jvb_admins:
  - "focus@{{ prosody_jvb_auth_domain_name }}"
  - "jvb@{{ prosody_jvb_auth_domain_name }}"
prosody_jvb_auth_domain_name: "auth.{{ prosody_jvb_domain_name }}"
prosody_jvb_auth_user: "jvb"
prosody_jvb_auth_user_B: "jvbb"
prosody_jvb_brewery_muc: "jvbbrewery@{{ prosody_jvb_muc_name }}"
prosody_jvb_c2s_stanza_size_limit: '10*1024*1024'
prosody_jvb_configure_flag: true
# prosody-jvb specific
prosody_jvb_domain_name: "jvb.{{ prosody_domain_name }}"
prosody_jvb_mod_log_ringbuffer_size: 1024*1024*4
prosody_jvb_muc_name: "muc.{{ prosody_jvb_domain_name }}"
prosody_limit_messages: false
prosody_limit_messages_check_token: false
# there are cases where we want messages limit config, but no module loaded and we can load it live later
prosody_limit_messages_load_module: false
prosody_log_level: info
prosody_log_syslog_enabled: false
prosody_log_syslog_hostname: localhost
prosody_log_syslog_port: 514
prosody_log_syslog_proto: udp
prosody_max_number_outgoing_calls: 3
prosody_meet_auth_vpaas_enabled: false
prosody_meet_av_moderation_enabled: true
prosody_meet_chat_history_url: false
prosody_meet_conf_duration_enabled: true
prosody_get_media_type: false
prosody_meet_flip_enabled: false
prosody_meet_moderator_enabled: false
prosody_meet_permissions_vpaas_enabled: false
prosody_meet_room_metadata_enabled: true
prosody_meet_speaker_stats_enabled: false
prosody_meet_speaker_stats_url: false
prosody_meet_transcriptions_url: false
prosody_meet_webhooks_enabled: false
prosody_meet_ban_auth_enabled: false
jitsi_access_manager_url: https://api-vo.jitsi.net/jaccess/v2/access
prosody_missed_api: "https://hc-video-events.staging.public.atl-paas.net/v1/call/missed"
prosody_mod_kick_endpoint: false
prosody_mod_jigasi_invite_enabled: false
prosody_mod_limits_rate: "512kb/s"
prosody_mod_log_ringbuffer_size: false
prosody_mod_measure_stanza_counts: false
prosody_mod_mucstatechange_notifications_bb_url: git@bitbucket.org:hipchat/prosody-mod_muc_statechange_notifications.git
prosody_mod_mucstatechange_notifications_bb_version: master
prosody_mod_turncredentials_enable_tcp: true
prosody_mod_turncredentials_hosts: ["all-turnrelay.jitsi.net"]
# TURN servers per region, available for use by all environments.
prosody_mod_turncredentials_hosts_by_region:
  ap-southeast-1: [
    "all-ap-se-1-turn.jitsi.net", "all-ap-south-1-turn.jitsi.net", "all-ap-se-2-turn.jitsi.net", "all-ap-ne-1-turn.jitsi.net"
  ] # ap-se-1, #ap-south-1, #ap-se-2, ap-ne-1
  ap-southeast-2: [
    "all-ap-se-2-turn.jitsi.net", "all-ap-south-1-turn.jitsi.net", "all-ap-se-1-turn.jitsi.net", "all-ap-ne-1-turn.jitsi.net"
  ] # ap-se-2, #ap-south-1, #ap-se-1, ap-ne-1
  eu-central-1: ["all-eu-central-1-turn.jitsi.net", "all-eu-west-1-turn.jitsi.net", "all-eu-west-2-turn.jitsi.net"] # eu-central-1, eu-west-1, eu-west-2
  eu-west-1: ["all-eu-west-1-turn.jitsi.net", "all-eu-west-2-turn.jitsi.net", "all-eu-central-1-turn.jitsi.net"] # eu-west-1, eu-west-2, eu-central-1
  us-east-1: ["all-us-east-1-turn.jitsi.net", "all-us-east-2-turn.jitsi.net", "all-ca-central-1-turn.jitsi.net"] # us-east-1, us-east-2, ca-central-1
  us-west-1: ["all-us-west-1-turn.jitsi.net", "all-us-west-2-turn.jitsi.net", "all-ca-central-1-turn.jitsi.net"] # us-west-1, us-west-2, ca-central-1
  us-west-2: ["all-us-west-2-turn.jitsi.net", "all-us-west-1-turn.jitsi.net", "all-ca-central-1-turn.jitsi.net"] # us-west-2, us-west-1, ca-central-1
prosody_mod_turncredentials_port: 443
prosody_mod_turncredentials_secret: "{{ coturn_secret | default('secret') }}"
prosody_muc_allowners: false
prosody_muc_max_occupants: 21
prosody_muc_max_occupants_ignore_list:
  - "recorder@recorder.{{ prosody_domain_name }}"
  - "transcriber@recorder.{{ prosody_domain_name }}"
prosody_muc_moderated_rooms: false
prosody_muc_moderated_subdomains: false
prosody_muc_password_whitelist_jids:
  - "focus@{{ prosody_auth_domain_name }}"
  - "recorder@recorder.{{ prosody_domain_name }}"
  - "transcriber@recorder.{{ prosody_domain_name }}"
prosody_muc_require_token_for_moderation: false
# prosody 0.11 and later should always use epoll for scalability
prosody_network_backend: epoll
# YOLO, reevaluate after the heat dissipates
prosody_open_file_limit: 999999
# config only used when prosody_install_from_apt is false (file install method)
prosody_package_filename: "{{ prosody_package_name }}_{{ prosody_package_version }}.deb"
# with apt install we use package name from apt variable: 'prosody'
# with file install we use package name from dpkg variable: 'prosody-0.11'
prosody_package_name: "{{ prosody_dpkg_base_name if not prosody_install_from_apt else prosody_apt_base_name }}"
prosody_package_subversion: "13"

prosody_polls_enabled: true

prosody_architecture: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'amd64' }}"
# with file version we must set it via variable
# with apt we use the shell to detect subversion so leave it blank ''
prosody_minor_version: "{{ '11' if not prosody_install_from_apt else '' }}"
prosody_muc_events_api_key: 'pleasereplace'
prosody_package_version: "{{ prosody_url_version }}-1~{{ ansible_distribution_release }}1_{{ prosody_architecture }}"
prosody_password_public_key_repo_url: false
prosody_public_key_repo_url: false
prosody_rate_limit_cache_size: 10000
prosody_rate_limit_login_rate: 3
prosody_rate_limit_session_rate: 2000
prosody_rate_limit_timeout: 60
# whitelist localhost, internal network
prosody_rate_limit_whitelist: ["127.0.0.1", "10.0.0.0/8"]
prosody_rate_limit_host_whitelist:
  - "recorder.{{ prosody_domain_name }}"
prosody_region: "{{ ansible_ec2_placement_region if ansible_ec2_placement_region is defined and ansible_ec2_placement_region
  else oracle_to_aws_region_map[oracle_region] if oracle_region is defined and oracle_region in oracle_to_aws_region_map else 'default' }}"
prosody_server_public_key_repo_url: false
prosody_slow_events_threshold: 0.5
prosody_ssh_key_crt_local_path: jitsi.example.com.crt
prosody_ssh_key_key_local_path: jitsi.example.com.key
prosody_stats_port: 8125
prosody_stats_provider: "statsd"
prosody_stats_server: "localhost"
# with file version we must set it via variable
# with apt we use the shell to detect subversion so leave it blank ''
prosody_subversion: "{{ prosody_package_subversion if not prosody_install_from_apt else '' }}"
prosody_token_allow_empty: true
prosody_visitor_token_allow_empty: true
prosody_token_app_id: jitsi
prosody_token_app_secret: replaceme
# our networks and cloudflare ip-ranges (cloudflare ranges come from https://www.cloudflare.com/en-gb/ips/)
prosody_trusted_proxies: [
  "127.0.0.1", "::1", "10.0.0.0/8", "103.21.244.0/22", "103.22.200.0/22", "103.31.4.0/22", "104.16.0.0/13", "104.24.0.0/14",
  "108.162.192.0/18", "131.0.72.0/22", "141.101.64.0/18", "162.158.0.0/15", "172.64.0.0/13", "173.245.48.0/20", "188.114.96.0/20",
  "190.93.240.0/20", "197.234.240.0/22", "198.41.128.0/17", "2400:cb00::/32", "2405:8100::/32", "2405:b500::/32", "2606:4700::/32",
  "2803:f800::/32", "2a06:98c0::/29", "2c0f:f248::/32"
]
prosody_use_lua_54: false
prosody_url_version: 0.12.4
# vars for apt install method
# prosody_version is only used from when prosody_install_from_apt is true, and uses wildcard syntax
prosody_version: 0.12.*
# shell command to extract installed prosody version string from dpkg
prosody_version_shell: "dpkg -s {{ prosody_package_name }} | awk '/Version/{print $2}' | cut -d'-' -f1"
prosody_visitors_enabled: "{{ visitors_enabled | default(false) }}"
prosody_visitors_count: "{{ visitors_count | default(0) }}"
prosody_visitors_always_supported: false
prosody_visitors_auto_allow: false
prosody_visitors_muc_max_occupants: false
prosody_vpaas_public_key_repo_url: false
# Enables SMACKS module in prosody and XMPP stream resume functionality in jitsi-meet
prosody_xmpp_resume: true
shard_name: "{{ hcv_environment }}"
