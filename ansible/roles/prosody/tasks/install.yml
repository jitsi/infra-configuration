---
- name: Install lua 5.2
  ansible.builtin.apt:
    name: ["lua5.2", "liblua5.2-dev"]
    state: present

- name: Install list of packages
  ansible.builtin.apt:
    name: [
      "git", "luarocks",
      "libexpat{{ '1' if ansible_distribution_release == 'focal' else '' }}-dev",
      "libpcre3-dev", "libssl-dev", "build-essential", "openssl", "lua-bitop",
      "libevent-dev", "lua-expat", "lua-filesystem", "ssl-cert",
      "libidn{{ '11' if ansible_distribution_release == 'focal' else '12' }}",
      "lua-basexx", "lua-luaossl", "lua-cjson"
    ]
    state: present

- name: Install luarocks luaoscket
  ansible.builtin.shell: |
    set -o pipefail
    luarocks list | grep -w -q luasocket || luarocks install luasocket
  args:
    executable: /bin/bash
- name: Install luarocks luasec
  ansible.builtin.shell: |
    set -o pipefail
    luarocks list | grep -w -q luasec || luarocks install luasec OPENSSL_LIBDIR=/usr/lib/{{ ansible_architecture }}-linux-gnu/
  args:
    executable: /bin/bash
- name: Install luarocks luassl
  ansible.builtin.shell: |
    set -o pipefail
    luarocks list | grep -w -q luaossl || luarocks install luaossl \
    OPENSSL_LIBDIR=/usr/lib/{{ ansible_architecture }}-linux-gnu/ CRYPTO_LIBDIR=/usr/lib/{{ ansible_architecture }}-linux-gnu/
  args:
    executable: /bin/bash
- name: Install luarocks basexx
  ansible.builtin.shell: |
    set -o pipefail
    luarocks list | grep -w -q basexx || luarocks install basexx
  args:
    executable: /bin/bash
- name: Install luarocks lua-cjson
  ansible.builtin.shell: |
    set -o pipefail
    luarocks list | grep -w -q cjson || luarocks install lua-cjson 2.1.0-1
  args:
    executable: /bin/bash
- name: Install luarocks dependencies
  ansible.builtin.shell: |
    set -o pipefail
    luarocks list | grep -w -q {{ item }} || luarocks install {{ item }}
  args:
    executable: /bin/bash
  with_items:
    - net-url
    - inspect
    - uuid


- name: Install lua 5.4
  ansible.builtin.apt:
    name: ["lua5.4", "liblua5.4-dev"]
    state: present

- name: Set default lua 5.4 and luarocks to use 5.4
  ansible.builtin.shell: |
    set -o pipefail
    update-alternatives --set lua-compiler /usr/bin/luac5.4
    update-alternatives --set lua-interpreter /usr/bin/lua5.4
    luarocks config --scope system  lua_version 5.4
  args:
    executable: /bin/bash

- name: Install luarocks dependencies for lua 5.4
  ansible.builtin.shell: |
    set -o pipefail
    luarocks list | grep -w -q {{ item }} || luarocks install {{ item }}
  args:
    executable: /bin/bash
  with_items:
    - net-url
    - inspect
    - uuid
    - basexx
    - luaossl
    - lua-cjson 2.1.0-1

- name: Set back default lua 5.2 and luarocks to use 5.2
  ansible.builtin.shell: |
    set -o pipefail
    update-alternatives --set lua-compiler /usr/bin/luac5.2
    update-alternatives --set lua-interpreter /usr/bin/lua5.2
    luarocks config --scope system  lua_version 5.2
  args:
    executable: /bin/bash

- name: Install prosody-log-filter script
  ansible.builtin.copy:
    src: prosody-log-filter.sh
    dest: /usr/local/bin/prosody-log-filter.sh
    mode: 0755

- name: Install prosody-log-filter service file
  ansible.builtin.copy:
    mode: 0644
    src: prosody-log-filter.systemd
    dest: /lib/systemd/system/prosody-log-filter.service

- name: Install prosody health check script AWS
  ansible.builtin.copy:
    src: "prosody-health-check.sh"
    dest: "/usr/local/bin/prosody-health-check.sh"
    mode: 0755
  when: prosody_cloud_provider == "aws"

- name: Install prosody health check script OCI
  ansible.builtin.copy:
    src: "prosody-health-check-oracle.sh"
    dest: "/usr/local/bin/prosody-health-check.sh"
    mode: 0755
  when: prosody_cloud_provider == "oracle"

# now install, either from URL or via apt
- name: Include apt install tasks
  ansible.builtin.include_tasks: install-from-apt.yml
  when: prosody_install_from_apt

- name: Include URL install tasks
  ansible.builtin.include_tasks: install-from-url.yml
  when: not prosody_install_from_apt

- name: Register installed prosody version
  ansible.builtin.shell: |
    set -o pipefail
    {{ prosody_version_shell }}
  args:
    executable: /bin/bash
  register: prosody_version_shell

- name: Set prosody subversion fact
  ansible.builtin.set_fact:
    prosody_subversion: "{{ prosody_version_shell.stdout.split('.')[-1] }}"
    prosody_minor_version: "{{ prosody_version_shell.stdout.split('.')[1] }}"
  when: prosody_subversion == ''

# now patch prosody if necessary
- name: Copy muc_owner_allow_kick patch 0.11
  ansible.builtin.copy:
    mode: 0644
    src: "muc_owner_allow_kick.patch"
    dest: "/tmp/muc_owner_allow_kick.patch"
  when: (prosody_minor_version | int) == 11

- name: Copy muc_owner_allow_kick patch 0.12
  ansible.builtin.copy:
    mode: 0644
    src: "muc_owner_allow_kick-0.12.patch"
    dest: "/tmp/muc_owner_allow_kick.patch"
  when:
    - (prosody_minor_version | int) == 12
    - (prosody_subversion | int) < 1

- name: Apply muc_owner_allow_kick patch
  ansible.posix.patch:
    basedir: /usr/lib/prosody/modules/muc
    remote_src: true
    src: "/tmp/muc_owner_allow_kick.patch"
  when:
    - ((prosody_minor_version | int) == 12 and (prosody_subversion | int) < 1) or (prosody_minor_version | int) == 11


- name: Apply muc_lib_visitor_broadcast patch
  ansible.posix.patch:
    basedir: /usr/lib/prosody/modules/muc
    src: "muc_lib_visitor_broadcast.patch"
  when:
    - ((prosody_minor_version | int) == 12 and (prosody_subversion | int) < 4)

- name: Apply mod_smacks_session_close patch
  ansible.posix.patch:
    basedir: /usr/lib/prosody/modules
    src: "mod_smacks_session_close.patch"
    strip: 2
  when:
    - ((prosody_minor_version | int) == 12 and (prosody_subversion | int) < 3) or (prosody_minor_version | int) == 11

- name: Apply mod_websocket_auth_token patch
  ansible.posix.patch:
    basedir: /usr/lib/prosody/modules
    src: "mod_websocket_auth_token.patch"
  when:
    - (prosody_minor_version | int) == 11
    - (prosody_subversion | int) <= 5

- name: Apply mod_websocket_smacks patch
  ansible.posix.patch:
    basedir: /usr/lib/prosody/modules
    src: "mod_websocket_smacks.patch"
  when:
    - (prosody_minor_version | int) == 11
    - (prosody_subversion | int) <= 6

- name: Apply mod_http CIDR patch
  ansible.posix.patch:
    basedir: /usr/lib/prosody/modules
    src: "mod_http_support_cidr.patch"
    strip: 2
  when: (prosody_minor_version | int) == 11

- name: Apply mod_http parse IP patch
  ansible.posix.patch:
    basedir: /usr/lib/prosody/modules
    src: "mod_http_parse_ip.patch"
    strip: 2
  when: (prosody_minor_version | int) == 12 and (prosody_subversion | int) < 5

- name: Apply mod_websocket session IP patch for prosody 0.11
  ansible.posix.patch:
    basedir: /usr/lib/prosody
    src: "mod_websocket_session_ip.patch"
    strip: 1
  when: (prosody_minor_version | int) == 11

- name: Apply expat memory leak patch
  ansible.posix.patch:
    basedir: /usr/lib/prosody
    src: "expat_memory_leak.patch"
    strip: 1
  when:
    - (prosody_minor_version | int) == 11
    - (prosody_subversion | int) == 12

- name: Copy systemd file for nightly if it does not exist
  ansible.builtin.copy:
    mode: 0644
    src: "prosody.service"
    dest: "/lib/systemd/system/prosody.service"
    force: false

- name: Install (but do not enable) the mod_firewall rules
  ansible.builtin.copy:
    src: "disable_messaging.pfw"
    dest: "/usr/lib/prosody/rules.d/"
    mode: 0644
    force: true

- name: Copy over the plugin for muc event reporting
  ansible.builtin.copy:
    src: "mod_muc_events.lua"
    dest: "/usr/lib/prosody/modules/"
    mode: 0644

- name: Delete old turn credentials module
  ansible.builtin.file:
    path: "/usr/lib/prosody/modules/mod_turncredentials"
    state: "absent"

- name: Copy over the plugin for preset passwords on mucs
  ansible.builtin.copy:
    src: "mod_muc_password_preset.lua"
    dest: "/usr/lib/prosody/modules/"
    mode: 0644

- name: Copy over the plugin for jibri sessions
  ansible.builtin.copy:
    src: "mod_jibri_session.lua"
    dest: "/usr/lib/prosody/modules/"
    mode: 0644

- name: Create jitsi-meet/prosody-plugins directory
  ansible.builtin.file:
    mode: 0755
    path: "/usr/share/jitsi-meet/prosody-plugins"
    state: directory

- name: Prosody file open limits
  ansible.builtin.copy:
    mode: 0644
    dest: "/etc/security/limits.d/prosody.conf"
    content: "prosody - nofile {{ prosody_open_file_limit }}\nroot - nofile {{ prosody_open_file_limit }}"

- name: PAM common session applies limits # noqa no-tabs
  ansible.builtin.lineinfile:
    dest: /etc/pam.d/common-session
    line: "session required\tpam_limits.so"

- name: PAM common noninteractive-session applies limits # noqa no-tabs
  ansible.builtin.lineinfile:
    dest: /etc/pam.d/common-session-noninteractive
    line: "session required\tpam_limits.so"


# set the systemd limits for default threads
- name: Set systemd DefaultLimitNOFILE setting
  ansible.builtin.lineinfile:
    dest: /etc/systemd/system.conf
    line: "DefaultLimitNOFILE={{ prosody_open_file_limit }}"
    regexp: "DefaultLimitNOFILE="
  when: ansible_service_mgr == "systemd"

# set the systemd limits for default threads
- name: Set systemd user DefaultLimitNOFILE setting
  ansible.builtin.lineinfile:
    dest: /etc/systemd/user.conf
    line: "DefaultLimitNOFILE={{ prosody_open_file_limit }}"
    regexp: "DefaultLimitNOFILE="
  when: ansible_service_mgr == "systemd"
