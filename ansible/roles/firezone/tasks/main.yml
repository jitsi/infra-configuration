---
- name: Ensure nginx ssl dir exists
  ansible.builtin.file:
    mode: 0755
    path: "{{ firezone_nginx_ssl_dir }}"
    state: directory

- name: Ensure nginx site dir exists
  ansible.builtin.file:
    mode: 0755
    path: "{{ firezone_nginx_site_dir }}"
    state: directory

- name: Nginx | Generate dhparam # noqa ignore-errors
  ansible.builtin.command: "openssl dhparam -dsaparam -out {{ firezone_nginx_ssl_dir }}/dhparam.pem 2048"
  ignore_errors: true
  args:
    creates: "{{ firezone_nginx_ssl_dir }}/dhparam.pem"
  notify: Restart nginx

- name: Copy SSL certificate
  ansible.builtin.copy:
    mode: 0644
    content: "{{ firezone_ssl_certificate }}"
    dest: "{{ firezone_nginx_ssl_dir }}/{{ firezone_sitename }}.crt"
  notify: Restart nginx

- name: Copy SSL private key
  ansible.builtin.copy:
    content: "{{ firezone_ssl_key_name }}"
    dest: "{{ firezone_nginx_ssl_dir }}/{{ firezone_sitename }}.key"
    mode: 0600
  notify: Restart nginx

- name: Overwrite nginx default config to redirect 80 to 443
  ansible.builtin.copy:
    mode: 0644
    src: "nginx_default.conf"
    dest: "{{ firezone_nginx_site_dir }}/default.conf"
  notify: Restart nginx

- name: Configure nginx firezone host
  ansible.builtin.template:
    mode: 0644
    src: nginx_vpn.conf.j2
    dest: "{{ firezone_nginx_site_dir }}/{{ firezone_sitename }}.conf"
  notify: Restart nginx

- name: Install docker compose
  ansible.builtin.apt:
    name: docker-compose-plugin
    state: present

- name: Create /opt/firezone
  ansible.builtin.file:
    mode: 0755
    path: /opt/firezone
    state: directory

- name: Configure firezone docker compose
  ansible.builtin.template:
    mode: 0644
    src: docker-compose.yml.j2
    dest: "/opt/firezone/docker-compose.yml"

- name: Generate firezone environment
  ansible.builtin.shell: docker run --rm firezone/firezone bin/gen-env > /opt/firezone/.env

- name: Change config URL
  ansible.builtin.lineinfile:
    dest: /opt/firezone/.env
    state: present
    regexp: "^EXTERNAL_URL="
    line: "EXTERNAL_URL=https://{{ firezone_sitename }}"

- name: Change config email
  ansible.builtin.lineinfile:
    dest: /opt/firezone/.env
    state: present
    regexp: "^DEFAULT_ADMIN_EMAIL="
    line: "DEFAULT_ADMIN_EMAIL={{ firezone_email }}"

- name: Change default IPs to route to firezone
  ansible.builtin.lineinfile:
    dest: /opt/firezone/.env
    state: present
    regexp: "^DEFAULT_CLIENT_ALLOWED_IPS="
    line: "DEFAULT_CLIENT_ALLOWED_IPS={{ firezone_network_ips }}"

- name: Bring up postgres and firezone in Docker
  ansible.builtin.command:
    cmd: docker compose up -d
    chdir: /opt/firezone

- name: Wait for docker to come up
  ansible.builtin.wait_for:
    timeout: 30

- name: Install default admin user
  ansible.builtin.command:
    cmd: docker compose exec firezone bin/create-or-reset-admin
    chdir: /opt/firezone

- name: Make sure docker comes up on restart
  ansible.builtin.systemd:
    enabled: true
    name: docker
