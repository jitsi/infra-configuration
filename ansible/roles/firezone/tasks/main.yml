---
- name: Install docker compose
  ansible.builtin.apt:
    name: docker-compose-plugin
    state: present

- name: Create /opt/firezone
  ansible.builtin.file:
    mode: 0755
    path: /opt/firezone
    state: directory

- name: Download firezone docker compose file
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/firezone/firezone/master/docker-compose.prod.yml
    dest: /opt/firezone/docker-compose.yml
    mode: 0644

- name: Generate firezone environment
  ansible.builtin.shell: docker run --rm firezone/firezone bin/gen-env > /opt/firezone/.env

- name: Change config URL
  ansible.builtin.lineinfile:
    dest: /opt/firezone/.env
    state: present
    regexp: "^EXTERNAL_URL="
    line: "EXTERNAL_URL=https://{{ dns_name }}"

- name: Change config email
  ansible.builtin.lineinfile:
    dest: /opt/firezone/.env
    state: present
    regexp: "^DEFAULT_ADMIN_EMAIL="
    line: "DEFAULT_ADMIN_EMAIL={{ firezone_email }}"

- name: Change config TLS options
  ansible.builtin.blockinfile:
    path: /opt/firezone/.env
    block: |
      TLS_OPTS="tls {
          on_demand
      }"

- name: Bring up firezone in docker
  ansible.builtin.command:
    cmd: docker compose up -d
    chdir: /opt/firezone

- name: Wait for docker to come up
  ansible.builtin.wait_for:
    timeout: 120

- name: Install default admin user
  ansible.builtin.command:
    cmd: docker compose exec firezone bin/create-or-reset-admin
    chdir: /opt/firezone

- name: Make sure docker comes up on restart
  ansible.builtin.systemd:
    enabled: true
    name: docker

- name: Assure "/etc/nginx/ssl" dir exists
  ansible.builtin.file:
    mode: 0755
    path: "{{ firezone_ssl_dest_dir }}"
    state: directory

- name: Nginx | Generate dhparam # noqa ignore-errors
  ansible.builtin.command: "openssl dhparam -out {{ firezone_ssl_dest_dir }}/dhparam.pem 2048"
  ignore_errors: true
  args:
    creates: "{{ firezone_ssl_dest_dir }}/dhparam.pem"
  notify: Restart nginx

- name: Install SSL certificate
  ansible.builtin.copy:
    mode: 0644
    content: "{{ firezone_ssl_certificate }}"
    dest: "{{ firezone_ssl_dest_dir }}/{{ firezone_sitename }}.crt"
  notify: Restart nginx

- name: Install SSL private key
  ansible.builtin.copy:
    content: "{{ firezone_ssl_key_name }}"
    dest: "{{ firezone_ssl_dest_dir }}/{{ firezone_sitename }}.key"
    mode: 0600
  notify: Restart nginx

- name: Configure nginx virtualhost for firezone
  ansible.builtin.template:
    mode: 0644
    src: nginx.conf.j2
    dest: "/etc/nginx/sites-available/{{ firezone_sitename }}"
  notify: Restart nginx

- name: Enable firezone site
  ansible.builtin.file:
    src: "/etc/nginx/sites-available/{{ firezone_sitename }}"
    dest: "/etc/nginx/sites-enabled/{{ firezone_sitename }}"
    state: link
  notify: Restart nginx
