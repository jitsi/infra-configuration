---
- name: register installed Meet version
  shell: dpkg -s {{ jitsi_meet_deb_pkg_name }} | grep Version | awk '{print $2}' | cut -d'.' -f3 | cut -d'-' -f1
  register: jitsi_meet_version_shell

- name: set jitsi_meet_web_version
  set_fact:
    jitsi_meet_web_version: "{{ jitsi_meet_version_shell.stdout | int }}"

- name: install branding override when required
  shell: DEBIAN_FRONTEND=noninteractive apt-get -y --allow-downgrades install "{{ jitsi_meet_branding_override }}=1.0.{{ jitsi_meet_version_shell.stdout }}*"
  when: jitsi_meet_branding_override != "jitsi-meet"

- name: register installed branding version
  shell: dpkg -s {{ jitsi_meet_branding_override }} | grep Version | awk '{print $2}' | cut -d'.' -f3,4 | cut -d'-' -f1
  register: jitsi_meet_branding_version_shell
  when: jitsi_meet_branding_override != "jitsi-meet"

- name: set jitsi_meet_branding_version
  set_fact:
    jitsi_meet_branding_version: "{{ jitsi_meet_branding_version_shell.stdout if (jitsi_meet_branding_override != 'jitsi-meet') else jitsi_meet_version_shell.stdout }}"

- name: Cleanup jitsi meet load test folder if any
  file: path=/opt/jitsi-meet-load-test state=absent
  when: jitsi_meet_load_test_enabled

- name: pull jitsi meet load test
  git: repo="{{ jitsi_meet_load_test_repo }}" dest="/opt/jitsi-meet-load-test"
  when: jitsi_meet_load_test_enabled

- name: npm Requirements for jitsi meet load test
  shell: npm install
  args:
    chdir: "/opt/jitsi-meet-load-test"
  when: jitsi_meet_load_test_enabled

- name: build jitsi meet load test
  shell: npm run build
  args:
    chdir: "/opt/jitsi-meet-load-test"
  when: jitsi_meet_load_test_enabled

- name: Directory for jitsi meet load test
  file: path="{{ jitsi_meet_nginx_root }}/load-test" state=directory
  when: jitsi_meet_load_test_enabled

- name: copy jitsi meet load test index
  copy: src="/opt/jitsi-meet-load-test/index.html" dest="{{ jitsi_meet_nginx_root }}/load-test/index.html" remote_src=yes
  when: jitsi_meet_load_test_enabled

- name: copy jitsi meet load test libs
  copy: src="/opt/jitsi-meet-load-test/libs" dest="{{ jitsi_meet_nginx_root }}/load-test" remote_src=yes
  when: jitsi_meet_load_test_enabled

- template: src=nginx.site.j2 dest=/etc/nginx/sites-available/{{ jitsi_meet_domain_name }} mode=0644
  notify: restart nginx

- file: path=/etc/nginx/sites-enabled/default state=absent

- file: src=/etc/nginx/sites-available/{{ jitsi_meet_domain_name }} dest=/etc/nginx/sites-enabled/{{ jitsi_meet_domain_name }} state=link
  notify: restart nginx

- name: Directory for meet configuration
  file: path="{{ jitsi_meet_config_path }}" state=directory

- name: Deploy config file
  template: src=config.js.j2 dest={{ jitsi_meet_config_path }}/{{ jitsi_meet_domain_name }}-config.js mode=0644 owner="www-data"

- name: install SSL certificate
  copy: content="{{ jitsi_meet_ssl_certificate }}"
        dest={{ jitsi_meet_ssl_dest_dir }}/{{ jitsi_meet_domain_name }}.crt
  notify: restart nginx

- name: install SSL private key
  copy: content="{{ jitsi_meet_ssl_key_name }}"
        dest={{ jitsi_meet_ssl_dest_dir }}/{{ jitsi_meet_domain_name }}.key
        mode=0600
  notify: restart nginx

- name: install Signal API SSL certificate
  copy: content="{{ jitsi_meet_signal_api_ssl_certificate }}"
        dest={{ jitsi_meet_ssl_dest_dir }}/{{ jitsi_meet_signal_api_server_name }}.crt
  notify: restart nginx

- name: install Signal API SSL private key
  copy: content="{{ jitsi_meet_signal_api_ssl_key_name }}"
        dest={{ jitsi_meet_ssl_dest_dir }}/{{ jitsi_meet_signal_api_server_name }}.key
        mode=0600
  notify: restart nginx

- name: install hep analytics script
  copy: src="analytics-hep.js" dest="{{ jitsi_meet_nginx_root }}/libs/analytics-hep.js" mode=0644
  when: jitsi_meet_google_analytics_hep_flag

- name: override jitsi meet plugin head
  template: src="plugin.head.html.j2" dest="{{ jitsi_meet_nginx_root }}/plugin.head.html"

# This is here only for compat with older jitsi-meet versions. New versions don't need this file
- name: override jitsi meet local details
  template: src="local.html.j2" dest="{{ jitsi_meet_nginx_root }}/local.html"

- name: symlink for index_conference.html to index.html
  file: path="{{ jitsi_meet_nginx_root }}/index_conference.html" src="{{ jitsi_meet_nginx_root }}/index.html" state=link

- name: override jitsi meet title and metadata
  copy: content="{{ jitsi_meet_title_metadata }}"
        dest="{{ jitsi_meet_nginx_root }}/title.html"
  when: jitsi_meet_title_metadata_override

- name: add apple-app-site-association file to meet
  copy: content="{{ jitsi_meet_apple_site_associations }}" dest="{{ jitsi_meet_nginx_root }}/apple-app-site-association"

- name: .well_known directory
  file: path="{{ jitsi_meet_nginx_root }}/.well-known" state=directory

- name: add apple-app-site-association file to meet well known directory
  copy: content="{{ jitsi_meet_apple_site_associations }}" dest="{{ jitsi_meet_nginx_root }}/.well-known/apple-app-site-association"

- name: add assetlinks file to meet well known directory
  copy: content="{{ jitsi_meet_assetlinks }}" dest="{{ jitsi_meet_nginx_root }}/.well-known/assetlinks.json"

- name: add robots.txt
  copy: src="robots.txt" dest="{{ jitsi_meet_nginx_root }}/robots.txt"

- name: add _unlock file
  copy: content="OK" dest="{{ jitsi_meet_nginx_root }}/_unlock"

- name: copy sanitize script into place
  copy: src="sanitize.js" dest="{{ jitsi_meet_nginx_root }}/libs/sanitize.js"
  when: jitsi_meet_enable_sanitize_hack

- name: set base HTML contents (no sanitize hack)
  set_fact:
    jitsi_meet_base_html_content: "<base href=\"{{ jitsi_meet_cdn_base_url }}/{{ jitsi_meet_cdn_prefix }}{{ jitsi_meet_branding_version }}/\" />"
  when: not jitsi_meet_enable_sanitize_hack

- name: set base HTML contents (with sanitize hack)
  set_fact:
    jitsi_meet_base_html_content: "<base href=\"{{ jitsi_meet_cdn_base_url }}/{{ jitsi_meet_cdn_prefix }}{{ jitsi_meet_branding_version }}/\" />\n<script><!--#include virtual=\"libs/sanitize.js\" --></script>"
  when: jitsi_meet_enable_sanitize_hack

- name: add CDN base href for meet index.html
  copy: content="{{ jitsi_meet_base_html_content }}" dest="{{ jitsi_meet_nginx_root }}/base.html" mode=0644 owner="www-data"
  when: jitsi_meet_cdn_enabled

- name: remove CDN base href for meet index.html
  copy: content="" dest="{{ jitsi_meet_nginx_root }}/base.html" mode=0644 owner="www-data"
  when: jitsi_meet_cdn_enabled == false

#no longer need the nginx part, so make sure it's not present
- name: remove CDN configuration for meet nginx configuration
  file: path="{{ jitsi_meet_config_path }}/cdn.conf" state=absent
  notify: restart nginx
