# {{ ansible_managed }}

{% if fluentd_jitsi_jvb_stats_enabled %}
# Re-write the tag from input.jvb and input.jicofo
# if the message starts with "CAT="
<match input.*>
  @type rewrite_tag_filter
  rewriterule1 message ^CAT=(\w+) ${tag_parts[1]}.$1
  # If the message doesn't start with CAT=,
  # strip the "input" part of the tag, so that the
  # re-emitted message doesn't match this filter any more.
  rewriterule2 message ^.*$ ${tag_parts[1]}
</match>
{% endif %}

{% if fluentd_jitsi_jvb_stats_enabled and fluentd_jitsi_cloudwatch_boot_logs_enabled==false %}
# Messages from jvb and jicofo with messages
# starting with CAT=stat.
<match *.stat>
  @type cloudwatch_logs
  region {{ fluentd_jitsi_region }}
  # These go to a common "statistics" group
  log_group_name  {{ fluentd_jitsi_stats_log_group_name }}
  log_stream_name {{ fluentd_jitsi_stats_log_stream_name }}
  auto_create_stream true
</match>
{% endif %}

{% if fluentd_jitsi_jvb_series_enabled %}
<match input.jitsi.videobridge.series>
  @type cloudwatch_logs
  region {{ fluentd_jitsi_region }}
  log_group_name {{ fluentd_jitsi_videobridge_series_log_group_name }}
  log_stream_name {{ fluentd_jitsi_videobridge_series_log_stream_name }}
  auto_create_stream true
</match>
{% endif %}

# Everything else.
<match **>
  @type cloudwatch_logs
  region {{ fluentd_jitsi_region }}
  {% if fluentd_jitsi_cloudwatch_boot_logs_enabled==true %}
  log_group_name boot_logs
  log_stream_name "#{Socket.gethostname}"
  {% else %}
  log_group_name {{ fluentd_jitsi_log_group_name }}
  log_stream_name {{ fluentd_jitsi_log_stream_name }}
  {% endif %}
  auto_create_stream true
  #use_log_stream_name_prefix true
  #message_keys key1,key2,key3,...
  #max_message_length 32768
  #use_tag_as_group false
  #use_tag_as_stream false
  #include_time_key true
  #localtime true
  #log_group_name_key group_name_key
  #log_stream_name_key stream_name_key
  #remove_log_group_name_key true
  #remove_log_stream_name_key true
  #put_log_events_retry_wait 1s
  #put_log_events_retry_limit 17
  #put_log_events_disable_retry_limit false
</match>
