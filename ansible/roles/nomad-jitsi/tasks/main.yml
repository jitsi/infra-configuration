---
- name: Allow for vm memory overcommit
  ansible.posix.sysctl:
    name: vm.overcommit_memory
    value: 1
    sysctl_set: true
    state: present
    reload: true

- name: Create nomad jibri mount point
  ansible.builtin.file:
    path: "{{ nomad_jibri_mount_point }}"
    state: directory
    mode: 0755
    recurse: true
  when: nomad_pool_type == 'jibri'

- name: ECR credentials dependency
  ansible.builtin.apt:
    name: amazon-ecr-credential-helper
    state: present

- name: Deploy docker auth file
  ansible.builtin.copy:
    mode: 0644
    dest: "{{ nomad_docker_auth_file_path }}"
    content: "{{ nomad_docker_auth_file | to_json }}"

- name: Create directory for AWS credentials
  ansible.builtin.file:
    path: "/root/.aws"
    state: directory
    owner: "root"
    group: "root"
    mode: 0700

- name: AWS credentials
  ansible.builtin.template:
    src: aws_credentials.j2
    dest: "/root/.aws/credentials"
    owner: "root"
    group: "root"
    mode: 0700

- name: AWS config
  ansible.builtin.template:
    src: aws_config.j2
    dest: "/root/.aws/config"
    owner: "root"
    group: "root"
    mode: 0700

- name: Resolver consul directory
  ansible.builtin.file:
    path: /etc/systemd/resolved.conf.d
    mode: 0755
    state: directory

- name: Resolve consul DNS on nomad pools
  ansible.builtin.copy:
    mode: 0644
    content: |
      [Resolve]
      DNS=127.0.0.1:8600
      DNSSEC=false
      Domains=~consul
    dest: /etc/systemd/resolved.conf.d/consul.conf
  notify: Restart systemd-resolved

- name: Install graceful shutdown script
  ansible.builtin.copy:
    mode: 0755
    dest: /usr/local/bin/nomad_graceful_shutdown.sh
    src: nomad_graceful_shutdown.sh

- name: Install terminate script
  ansible.builtin.template:
    mode: 0755
    dest: /usr/local/bin/terminate_instance.sh
    src: nomad_terminate_instance_oracle.sh.j2

- name: Create plugin dir if missing
  ansible.builtin.file:
    path: /var/nomad/plugins
    state: directory
    mode: 0755

- name: Install nvidia helper plugin
  ansible.builtin.unarchive:
    src: "https://releases.hashicorp.com/nomad-device-nvidia/1.0.0/nomad-device-nvidia_1.0.0_linux_{{ nomad_architecture }}.zip"
    remote_src: true
    dest: /var/nomad/plugins/
    mode: 0755

# sysctl for bridge-nf-call-iptables
- name: Update sysctl for bridge-nf-call-iptables
  ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    sysctl_set: true
    state: present
    reload: true

- name: Update sysctl for bridge-nf-call-arptables
  ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-arptables
    value: 1
    sysctl_set: true
    state: present
    reload: true

- name: Update sysctl for bridge-nf-call-ip6tables
  ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: 1
    sysctl_set: true
    state: present
    reload: true

- name: Create directory for cni plugins
  ansible.builtin.file:
    path: /opt/cni/bin
    state: directory
    recurse: true
    mode: 0755

- name: Download cni nomad_cni_plugins_url
  ansible.builtin.unarchive:
    src: "{{ nomad_cni_plugins_url }}"
    remote_src: true
    dest: /opt/cni/bin
    mode: 0755
