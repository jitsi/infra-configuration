---
ansible_ec2_placement_region:
haproxy_acl_max_length: 60
haproxy_agent_check: true
haproxy_agent_check_port: 6060
haproxy_bad_room_list: "{{ bad_room_list | default([]) }}"
haproxy_backend_fall_count: 2
haproxy_backend_name: nodes
haproxy_backend_port: 443
haproxy_backend_rise_count: 3
haproxy_backend_use_private_ip: true
# for consul-template
haproxy_ban_domain_map_path: /etc/haproxy/maps/banned_domains.map
haproxy_ban_exact_map_path: /etc/haproxy/maps/banned_exact.map
haproxy_ban_prefix_map_path: /etc/haproxy/maps/banned_prefix.map
haproxy_ban_substr_map_path: /etc/haproxy/maps/banned_substring.map
haproxy_unban_prefix_map_path: /etc/haproxy/maps/unban_prefix.map
# for tenant-pin-writer
haproxy_ban_rooms_map_path: /etc/haproxy/maps/banned_rooms.map
haproxy_ban_tenants_map_path: /etc/haproxy/maps/banned_tenants.map
haproxy_boot_flag: false
haproxy_build_ami: false
haproxy_check_interval: 10s
# check health against same port as backend by default, also works against 80
haproxy_check_port: "{{ haproxy_backend_port }}"
haproxy_cloud_provider: "{{ cloud_provider | default('aws') }}"
haproxy_consul_datacenter: "{{ cloud_name | default('dc1') }}"
haproxy_consul_extra_urls: []
haproxy_consul_include_standalone: false
haproxy_consul_server: localhost:8500
haproxy_conf_path: "/etc/haproxy"
haproxy_configure_only: false
haproxy_configure_setup: true
haproxy_default_conf_path: "/etc/default/"
haproxy_domain_blacklist: example.com
haproxy_domain_blacklist_enabled: false
# by default, haproxy in sibling regions across clouds will consider entities in those regions as 'local'
haproxy_enable_cross_region: true
haproxy_environment: "{{ hcv_environment }}"
haproxy_facts: {}
haproxy_frontend_count: 4
haproxy_hash_function: sdbm avalanche
# by default do not enable http logging in haproxy
haproxy_http_log_enabled: false
haproxy_jvb_colibri_proxy_enabled: "{{ jvb_colibri_proxy_enabled | default(false) }}"
haproxy_jvb_colibri_proxy_port: "{{ jvb_colibri_proxy_port | default(8088) }}"
haproxy_init_d_path: '/etc/init.d/haproxy'
haproxy_installed_version: ""
haproxy_log_level: "{{ 'info' if haproxy_http_log_enabled else 'notice' }}"
haproxy_peer_port: 1024
haproxy_private_ip: "{{ private_ip | default(ansible_default_ipv4.address) }}"
haproxy_public_ip: "{{ public_ip | default('') }}"
haproxy_release_live: false
haproxy_release_live_map_path: /etc/haproxy/maps/live.map
haproxy_release_tenant_map_path: /etc/haproxy/maps/tenant.map
haproxy_region: "{{ cloud_region | default('default') }}"
haproxy_regions: "{{ haproxy_regions_by_region[haproxy_region] | default(default_regions) }}"
# required due to changes in configuration scripts which check for specific haproxy version
haproxy_rest_check: true
haproxy_set_shard_states_on_reconfigure: false
haproxy_ssl_certificates: false
haproxy_state_file: '/tmp/server_state'
haproxy_stats_socket: '/run/haproxy/admin.sock'
haproxy_systemd_path: '/lib/systemd/system/haproxy.service'
haproxy_test_backends_enabled: false
# roundrobin all backup servers by default
haproxy_health_up_map_value: "{{ False if haproxy_build_ami or haproxy_boot_flag else True }}"
haproxy_health_up_map_path: /etc/haproxy/maps/up.map
