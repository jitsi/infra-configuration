---
- name: Ensure signal-sidecar status file owner
  ansible.builtin.file:
    owner: signal-sidecar
    mode: 0644
    dest: "/etc/jitsi/shard-status"
    state: file

- name: Enable signal-sidecar census poll
  ansible.builtin.lineinfile:
    dest: /etc/jitsi/signal-sidecar/config
    regexp: '^CENSUS_POLL='
    line: "CENSUS_POLL={{ 'true' if signal_sidecar_census_enabled else 'false' }}"
  notify: Restart signal-sidecar

- name: Enable signal-sidecar census reports
  ansible.builtin.lineinfile:
    dest: /etc/jitsi/signal-sidecar/config
    regexp: '^CENSUS_REPORTS='
    line: "CENSUS_REPORTS={{ 'true' if signal_sidecar_census_reports_enabled else 'false' }}"
  notify: Restart signal-sidecar

- name: Set signal-sidecar census host
  ansible.builtin.lineinfile:
    dest: /etc/jitsi/signal-sidecar/config
    regexp: '^CENSUS_HOST='
    line: "CENSUS_HOST={{ signal_sidecar_domain_name }}"
  notify: Restart signal-sidecar

- name: Enable signal-sidecar sends drain above max jicofo participants
  ansible.builtin.lineinfile:
    dest: /etc/jitsi/signal-sidecar/config
    regexp: '^PARTICIPANT_MAX='
    line: "PARTICIPANT_MAX={{ signal_sidecar_max_participants }}"
  notify: Restart signal-sidecar

- name: Enable signal-sidecar send weight based on jicofo participants
  ansible.builtin.lineinfile:
    dest: /etc/jitsi/signal-sidecar/config
    regexp: '^WEIGHT_PARTICIPANTS='
    line: "WEIGHT_PARTICIPANTS={{ signal_sidecar_weight | to_json }}"
  notify: Restart signal-sidecar

- name: Enable signal-sidecar prosody dump script
  ansible.builtin.lineinfile:
    dest: /etc/jitsi/signal-sidecar/config
    regexp: '^PROSODY_DUMP='
    line: "PROSODY_DUMP={{ signal_sidecar_prosody_dump_script }}"
  notify: Restart signal-sidecar

- name: Enable signal-sidecar consul shard status
  ansible.builtin.lineinfile:
    dest: /etc/jitsi/signal-sidecar/config
    regexp: '^CONSUL_STATUS='
    line: "CONSUL_STATUS={{ signal_sidecar_consul_status | to_json }}"
  notify: Restart signal-sidecar

- name: Enable signal-sidecar consul report publishing
  ansible.builtin.lineinfile:
    dest: /etc/jitsi/signal-sidecar/config
    regexp: '^CONSUL_REPORTS='
    line: "CONSUL_REPORTS={{ signal_sidecar_consul_reports | to_json }}"
  notify: Restart signal-sidecar

- name: Set signal-sidecar consul shard status key
  ansible.builtin.lineinfile:
    dest: /etc/jitsi/signal-sidecar/config
    regexp: '^CONSUL_STATUS_KEY='
    line: "CONSUL_STATUS_KEY={{ signal_sidecar_consul_status_key }}"
  notify: Restart signal-sidecar

- name: Enable signal-sidecar consul signal reports publish
  ansible.builtin.lineinfile:
    dest: /etc/jitsi/signal-sidecar/config
    regexp: '^CONSUL_REPORT_KEY='
    line: "CONSUL_REPORT_KEY={{ signal_sidecar_consul_report_key }}"
  notify: Restart signal-sidecar

- name: Start signal-sidecar service
  ansible.builtin.service:
    name: signal-sidecar
    state: started
    enabled: true
  when: signal_sidecar_enabled

- name: Test signal-sidecar service
  ansible.builtin.uri:
    url: http://localhost:6000/health
  register: ss_uri_response
  until: ss_uri_response.status == 200
  retries: 15
  delay: 6
