---
- name: Main
  hosts: all
  gather_facts: true
  become_user: root
  become: true
  force_handlers: true
  gather_timeout: 180
  vars_files:
    - secrets/ssh-users.yml
    - secrets/ssl-certificates.yml
    - secrets/jvb.yml
    - secrets/consul.yml
    - secrets/jvb-ddns.yml
    - secrets/jvb-ddns-aws.yml
    - secrets/asap-keys.yml
    - secrets/oci-logging.yml
    - roles/jitsi-repo/defaults/main.yml
    - roles/jitsi-videobridge/defaults/main.yml
    - secrets/repo.yml
    - config/vars.yml
    - sites/{{ hcv_environment }}/vars.yml
  vars:
    cloud_provider: oracle
    shard_role: JVB
    adl: "{{ ansible_distribution | lower }}"
    adrl: "{{ ansible_distribution_release | lower }}"
    consul_template_env:
      JVB_USERNAME: "{{ jvb_auth_user }}"
      JVB_PASSWORD: "{{ jvb_auth_password }}"
      JVB_IQ_HANDLER_MODE: "{{ jvb_iq_handler_mode }}"
      JVB_INITIAL_DRAIN_MODE: "{{ jvb_initial_drain_mode|to_json }}"
      JVB_MUC_NICKNAME: "{{ ansible_hostname }}"
      JVB_POOL_MODE: "{{ jvb_pool_mode }}"
      RELEASE_NUMBER: "{{ jitsi_release_number }}"
      SHARD_BREWERY_ENABLED: "{{ jvb_shard_brewery_enabled|to_json }}"
    consul_template_template_files:
      - src: roles/jitsi-videobridge/files/shards.json.template
      - src: roles/jitsi-videobridge/files/xmpp.conf.template
    consul_template_templates:
      - name: "shards.json.template"
        dest: "/etc/jitsi/videobridge/shards.json"
        cmd: "/usr/local/bin/configure-jvb-shards-wrapper.sh"
        perms: 0644
        backup: false
      - name: "xmpp.conf.template"
        dest: "/etc/jitsi/videobridge/xmpp.conf"
        user: "root"
        group: "jitsi"
        perms: 0644
        backup: false

  pre_tasks:
    - name: Remove Ansible repository
      ansible.builtin.apt_repository:
        repo: "ppa:ansible/ansible"
        state: absent
        update_cache: false
    - name: Remove OpenJDK repository
      ansible.builtin.apt_repository:
        repo: "ppa:openjdk-r/ppa"
        state: absent
        update_cache: false
    - name: Remove rsyslog apt repo
      ansible.builtin.apt_repository:
        repo: "ppa:adiscon/v8-stable"
        state: absent
        update_cache: false
    - name: Remove nginx repo
      ansible.builtin.apt_repository:
        repo: "deb http://nginx.org/packages/ubuntu/ jammy nginx"
        state: absent
        update_cache: false
    - name: Remove old jitsi repo
      ansible.builtin.apt_repository:
        repo: "deb [trusted=yes] {{ jitsi_auth_url }} unstable/"
        state: absent
        update_cache: false
      tags: setup
    - name: Remove old jitsi trusted repo
      ansible.builtin.apt_repository:
        repo: "deb [trusted=yes] {{ jitsi_auth_url_old }} unstable/"
        state: absent
        update_cache: false
      tags: setup
    - name: Setup new repo template file
      ansible.builtin.template:
        dest: "/etc/apt/auth.conf.d/jitsi-repo.conf"
        src: "roles/jitsi-repo/templates/jitsi-repo.conf.j2"
        owner: root
        mode: 0600
      tags: setup
    - name: Setup new trusted jitsi repo
      ansible.builtin.apt_repository:
        repo: "deb [trusted=yes] {{ jitsi_repo_url }} unstable/"
        state: present
        update_cache: false
      tags: setup
    - name: Remove deprecated old repo
      ansible.builtin.apt_repository:
        repo: "deb [trusted=yes] {{ jitsi_repo_url_old }} unstable/"
        state: absent
      tags: setup
    - name: Remove td-agent deb repository
      ansible.builtin.apt_repository:
        repo: "deb https://packages.treasuredata.com/4/{{ adl }}/{{ adrl }}/ {{ adrl }} contrib"
        state: absent
        update_cache: false
      tags: boot
    - name: Set cloud provider to oracle
      ansible.builtin.set_fact:
        cloud_provider: oracle
      tags: setup
    - name: Set hostname
      ansible.builtin.hostname:
        name: "{{ ansible_fqdn }}"
      tags: boot
    - name: Stop fluentd
      ansible.builtin.service:
        name: "td-agent"
        state: stopped
        enabled: false
      register: stop_fluentd_results
      ignore_errors: true
      tags: boot
      when: not jvb_enable_fluentd
    - name: Get instance's VNIC
      ansible.builtin.uri:
        url: http://169.254.169.254/opc/v1/vnics/
      register: vnic_result
      tags: setup
    - name: Set vnic fact
      ansible.builtin.set_fact:
        jvb_vnic: "{{ vnic_result.json[0].vnicId }}"
      tags: setup
    - name: Get instance's details
      ansible.builtin.uri:
        url: http://169.254.169.254/opc/v1/instance/
      register: instance_result
      tags: setup
    - name: Set shape fact
      ansible.builtin.set_fact:
        jvb_shape: "{{ instance_result.json.shape }}"
        cloud_instance_id: "{{ instance_result.json.id }}"
        cloud_availability_domain: "{{ instance_result.json.ociAdName }}"
        cloud_fault_domain: "{{ instance_result.json.faultDomain }}"
      tags: setup
    - name: Get instance's Public IP from VNIC
      ansible.builtin.command: "oci network vnic get --vnic-id {{ jvb_vnic }} --auth instance_principal"
      register: vnic_details_result
      changed_when: vnic_details_result.rc != 0 # <- Uses the return code to define when the task has changed.
      tags: setup
    - name: Set IP facts
      ansible.builtin.set_fact:
        jvb_ddns_ipv4_addr: "{{ (vnic_details_result.stdout | from_json).data['public-ip'] }}"
        autoscaler_sidecar_public_ip: "{{ (vnic_details_result.stdout | from_json).data['public-ip'] }}"
      tags: setup
    - name: Register installed videobridge package
      # Version: 2.1-198-gb3d9736e-1
      ansible.builtin.shell: |
        set -o pipefail
        dpkg -s jitsi-videobridge2 | grep -E '^Version:' | awk '{print $2}' | sed -e 's/\-g.*//'
      args:
        executable: /bin/bash
      register: jvb_version
      changed_when: jvb_version.rc != 0 # <- Uses the return code to define when the task has changed.
      tags: setup
    - name: Remove NodeSource deb repository
      ansible.builtin.apt_repository:
        repo: 'deb https://deb.nodesource.com/node_12.x {{ ansible_distribution_release }} main'
        state: absent
        update_cache: false
      tags: boot
    - name: Remove NodeSource deb-src repository
      ansible.builtin.apt_repository:
        repo: 'deb-src https://deb.nodesource.com/node_12.x {{ ansible_distribution_release }} main'
        state: absent
        update_cache: false
      tags: boot

  post_tasks:
    - name: Restart rsyslog
      ansible.builtin.service:
        name: rsyslog
        state: restarted
      tags: boot
  roles:
# TODO IPv6 is not yet supported by oracle
#    - { role: "ipv6", tags: "ipv6", ipv6_enabled: true}
    - { role: "iptables", tags: "iptables"}
    - { role: "iptables-consul", tags: "iptables-consul"}
    # enable java 11 if set for the environment
    - { role: "openjdk-java", tags: "openjdk-java", java_use_11: "{{ jvb_java_11 }}", java_install_flag: false }
    - { role: "logrotate", tags: "logrotate", logrotate_rules_jvb_enabled: true}
    - { role: "journald", tags: "journald"}
    - { role: "vector", tags: "vector", when: jvb_vector_enabled, vector_install_flag: false }
    - { role: "rsyslog", tags: "rsyslog", rsyslog_install_flag: false, rsyslog_tcp_output_enabled: true, when: jvb_vector_enabled }
    - { role: "sshusers", tags: "ssh", ssh_users_config_flag: false, ssh_users_accounts_flag: false, ssh_users_system_flag: true }
    - { role: "fluentd-jitsi", tags: "fluentd", fluentd_jitsi_install_flag: false, fluentd_jitsi_configure_flag: true, when: jvb_enable_fluentd }
    - role: "wavefront"
      tags: "telegraf"
      wavefront_proxy_address: "{{ regional_wavefront_proxy }}"
      wavefront_configure_collector: true
      wavefront_install_collector: false
      datadog_extensions: "true"
      when: telegraf_enabled
      vars:
        telegraf_inputs:
          prometheus:
            urls: ["http://localhost:8080/metrics"]
            namepass: "{{ telegraf_jvb_filter if jvb_enable_telegraf else ['jitsi_jvb_healthy', 'jitsi_jvb_loss_*'] }}"
          nginx:
            urls: ["http://localhost:888/nginx_status/"]
          nstat:
            fieldpass: ["UdpInErrors", "Udp6InErrors"]
          procstat:
            - systemd_unit: "jitsi-videobridge2.service"
              cmdline_tag: false
              pid_tag: false
        telegraf_tags:
          shard-role: "JVB"
          role: "JVB"
          environment: "{{ hcv_environment }}"
          environment_type: "{{ environment_type|default('prod', True) }}"
          shard: "{{ shard_name }}"
          region: "{{ jvb_custom_region }}"
          oracle_region: "{{ jvb_custom_region }}"
          release_number: "{{ jitsi_release_number }}"
          jvb_release_number: "{{ jvb_release_number }}"
          cloud: "{{ cloud_provider }}"
          jvb_version: "{{ jvb_version.stdout }}"
    - { role: "autoscaler-sidecar", tags: "autoscaler-sidecar",
        autoscaler_instance_type: "JVB", autoscaler_install_flag: false, autoscaler_configure_flag: true,
        jitsi_autoscaler_sidecar: "{{ autoscaler_sidecar_jvb_flag }}", jvb_ddns_cleanup_flag: true}
    - { role: "consul-agent", tags: "consul", consul_install_flag: false}
    - { role: "consul-service-start", tags: "consul-service-start"}
    - { role: "jvb-ssl", "tags": "jvb-ssl", jvb_ssl_install_flag: false, when: jvb_nginx_ssl_enabled }
    - { role: "jitsi-videobridge-ddns", tags: "jitsi-videobridge-ddns",
        jvb_ddns_install_flag: false, jvb_ddns_configure_flag: true, jvb_ddns_cleanup_flag: true, ipv6_enabled: false }
    - { role: "jitsi-videobridge", tags: "jitsi-videobridge",
        jvb_image_build_flag: false, jvb_install_flag: false, jvb_configure_flag: true, jvb_ddns_cleanup_flag: true }
    - { role: "consul-template", tags: "consul-template", when: jvb_enable_consul_template }
    - { role: "consul-telegraf", tags: "consul-telegraf" }
    - { role: "jvb-rtcstats-push", tags: "rtcstats-push", jvb_rtcstats_push_install_flag: false, jvb_rtcstats_push_configure_flag: true }
